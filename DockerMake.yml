# vim: sts=2 ts=2 sw=2 ft=yaml

# Debian family

# LAYERS
base:
  ignore: |
    *.pyc
    *~
    *.tmp
  build: |
    MAINTAINER Petr Michalec "<epcim@apealive.net>"
    ENV LC_ALL C
    ENV LANG C.UTF-8
    ENV LANGUAGE $LANG
    ENV TZ Etc/UTC
    ENV LAYER_PKGUPDT "apt-get update -q"
    ENV LAYER_INSTALL "apt-get install -y --no-install-recommends "
    ENV LAYER_CLEANUP "apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.cache /home/*/.cache"
    ENV DEBIAN_FRONTEND "noninteractive"



common-cleanup:
  build: |
    RUN echo "Layer common cleanup" \
      && eval ${LAYER_CLEANUP}


common:
  build: |
    RUN echo "Layer with common packages" \
      && eval ${LAYER_PKGUPDT} \
      && apt-get upgrade -qy \
      && ${LAYER_INSTALL} \
           curl \
           git \
           rsync \
           sudo \
           vim-tiny \
           wget \
            \
           apt-transport-https \
           ca-certificates \
           netcat \
           tzdata \
           gnupg2 \
           zlib1g-dev \
      && eval ${LAYER_CLEANUP}


salt:
  build: |
    ARG SALT_VERSION="stable"
    ENV SALT_BOOTSTRAP_OPTS "-dX ${SALT_VERSION}"
    RUN echo "Layer salt" \
      && eval ${LAYER_PKGUPDT} \
      && mkdir -p /var/run/salt /var/cache/salt /var/log/salt /etc/salt/pki/master/minions \
      && curl -qL https://bootstrap.saltstack.com | $SUDO sh -s -- -M ${SALT_BOOTSTRAP_OPTS} \
      && useradd --system salt \
      && chown -R salt:salt /etc/salt /var/cache/salt /var/log/salt /var/run/salt \
      && eval ${LAYER_CLEANUP}


salt-formulas:
  build: |
    ARG SALT_FORMULA_REVISION="nightly"
    ARG SALT_FORMULA_SOURCE="pkg"
    ENV SALT_FORMULA_REVISION $SALT_FORMULA_REVISION
    ENV APT_REPOSITORY "deb http://apt.mirantis.com/xenial ${SALT_FORMULA_REVISION} salt"
    ENV APT_REPOSITORY_GPG "http://apt.mirantis.com/public.gpg"
    RUN echo "Layer salt, salt-formulas prerequisites" \
      && eval ${LAYER_PKGUPDT} \
      && ${LAYER_INSTALL} \
         gcc \
         gpgv \
         gnupg2 \
         python-pip \
         python-wheel \
         python-setuptools \
         python-dev \
      && eval ${LAYER_CLEANUP}
    # TODO, formulas from git, configure properly _modules, _states, etc. or initialize
    RUN echo "Layer salt-formulas" \
      && echo "$APT_REPOSITORY" | tee /etc/apt/sources.list.d/salt-formulas.list >/dev/null \
      && curl -sL $APT_REPOSITORY_GPG | $SUDO apt-key add - \
      && eval ${LAYER_PKGUPDT} \
      && ${LAYER_INSTALL} "salt-formula-*" -y --fix-missing -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
      && mkdir -p /srv/salt/env/dev \
      && ln -s /usr/share/salt-formulas/env /srv/salt/env/prd \
      && eval ${LAYER_CLEANUP}
    #
    # TODO, Alternative install salt-formulas from git


# Saltstack formulas from git
# saltstack-formulas:
#   TODO, install salt-stack formulas in non conflict path with salt-formulas


wheel:
  requires:
    - base
  build: |
    ARG WHEELHOUSE_REVISION="master"
    ENV WHEELHOUSE_REVISION $WHEELHOUSE_REVISION
    # NOTE, wheelhouse requires at least ruamel v0.15.x (debian:stretch has 0.13.x as of 2018.2)
    # python-ruamel.yaml \
    RUN echo "Layer pip/ruamel.yaml prerequisites" \
      && eval ${LAYER_PKGUPDT} \
      && ${LAYER_INSTALL}  \
         python-pip \
         python-setuptools \
         libpython-dev \
         python-dev \
         gcc \
      && eval ${LAYER_CLEANUP}
    RUN echo "Layer wheelhouse" \
      && git clone https://github.com/epcim/wheelhouse.git /wh \
      && cd /wh && git checkout origin/$WHEELHOUSE_REVISION \
      && LANG=C LC_ALL=C pip install -r /wh/requirements.txt


# TODO, change reclass revision @develop to @master once merged
reclass:
  requires:
  - salt
  - salt-formulas
  - tini-saltmaster
  build: |
    ARG SALT_EXT_PILLAR="reclass"
    ENV SALT_EXT_PILLAR $SALT_EXT_PILLAR
    ARG RECLASS_REVISION="develop"
    ENV RECLASS_REVISION $RECLASS_REVISION
    # VOLUME ["/etc/salt/pki" "/srv/salt/env" "/srv/salt/pillar" "/srv/salt/reclass"]
    RUN echo "Layer reclass" \
      && mkdir -p /etc/reclass /srv/salt/reclass/classes/system \
      && git clone https://github.com/Mirantis/reclass-system-salt-model /srv/salt/reclass/classes/system \
      && pip install --install-option="--prefix=" --upgrade --force-reinstall -I \
           git+https://github.com/salt-formulas/reclass.git@$RECLASS_REVISION \
      && ln -s /usr/share/salt-formulas/reclass/service /srv/salt/reclass/classes/service
      # apt-get update; DEBIAN_FRONTEND=noninteractive apt-get install -qy reclass && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \

saltclass:
  requires:
  - salt
  - salt-formulas
  - tini-saltmaster
  build: |
    ARG SALT_EXT_PILLAR="saltclass"
    ENV SALT_EXT_PILLAR $SALT_EXT_PILLAR
    # VOLUME ["/etc/salt/pki" "/srv/salt/env" "/srv/salt/pillar" "/srv/salt/saltclass"]
    RUN echo "Layer saltclass" \
      && mkdir -p mkdir /srv/salt/saltclass/classes/system \
      && git clone https://github.com/epcim/saltclass-system /srv/salt/saltclass/classes/system \
      && cp -a /usr/share/salt-formulas/reclass /usr/share/salt-formulas/saltclass \
      && for i in $(grep -r -e '^applications:' -e '^parameters:' -l /usr/share/salt-formulas/saltclass/service); do \
           sed -i 's/applications:/states:/g;s/parameters:/pillars:/g' $i; \
         done \
      && ln -s /usr/share/salt-formulas/saltclass/service /srv/salt/saltclass/classes/service

tini:
  build: |
    ENV TINI_VERSION 0.16.1
    ENV TINI_SHA 5e01734c8b2e6429a1ebcc67e2d86d3bb0c4574dd7819a0aff2dca784580e040
    RUN curl -s -S -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64" -o /bin/tini && chmod +x /bin/tini \
      && echo "$TINI_SHA  /bin/tini" | sha256sum -c -
    #COPY files/entrypoint.sh /entrypoint.sh
    #ENTRYPOINT ["/bin/tini", "--", "/entrypoint.sh"]

tini-saltmaster:
  build_directory: .
  requires:
  - tini
  build: |
    VOLUME [ "/etc/salt/pki" "/srv/salt/env" "/srv/salt/pillar" "/srv/salt/reclass" "/srv/salt/saltclass" ]
    ADD files/reclass/reclass-config.yml /etc/reclass/
    ADD files/salt/master.conf    /etc/salt/master.d/
    ADD files/salt/saltclass.conf /tmp/
    ADD files/salt/reclass.conf   /tmp/
    COPY files/entrypoint.sh /entrypoint.sh
    ENTRYPOINT ["/bin/tini", "--", "/entrypoint.sh"]
    EXPOSE 4505 4506


# BASE IMAGES
debian-stretch:
  FROM: debian:stretch
  requires:
    - base
    - common
  build: |
    RUN echo "Layer base image specifics" \
      && eval ${LAYER_PKGUPDT} \
      && ${LAYER_INSTALL} \
           locales \
           locales-all \
      && update-locale LANG=en_US.UTF-8 \
      && eval ${LAYER_CLEANUP}

# Note, debian:ubuntu install locales though different packages
locales:
  build: |
    RUN echo "Layer base image specifics" \
      && eval ${LAYER_PKGUPDT} \
      && ${LAYER_INSTALL} \
           locales \
           language-pack-en \
      && update-locale LANG=en_US.UTF-8 \
      && eval ${LAYER_CLEANUP}

ubuntu-bionic:
  FROM: ubuntu:bionic
  requires:
    - base
    - common
    - locales

ubuntu-xenial:
  FROM: ubuntu:xenial
  requires:
    - base
    - common
    - locales

ubuntu-trusty:
  FROM: ubuntu:trusty
  requires:
    - base
    - common
    - locales

